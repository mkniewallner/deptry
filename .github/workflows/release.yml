name: Release

on:
  pull_request:
    types: [opened, synchronize, reopened]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  set-version:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

#      - name: Export tag
#        id: vars
#        run: echo tag=${GITHUB_REF#refs/*/} >> $GITHUB_OUTPUT

      - name: Update project version
        run: |
          sed -i "s/^version = \".*\"/version = \"$RELEASE_VERSION\"/" pyproject.toml
        env:
          RELEASE_VERSION: 1.2.3

      - name: Upload updated pyproject.toml
        uses: actions/upload-artifact@v4
        with:
          name: pyproject-toml
          path: pyproject.toml

  build-wheel:
    strategy:
      matrix:
        os:
          - name: linux
            image: ubuntu-22.04
          - name: macos
            image: macos-14
          - name: windows
            image: windows-2022
        target: [x86_64, aarch64]
        python: ['3.12', 'pypy3.10']
      fail-fast: false
    runs-on: ${{ matrix.os.image }}
    name: Build wheel for ${{ matrix.os.name }} ${{ matrix.target }} (${{ matrix.python }})
    needs: [set-version]
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Download updated pyproject.toml
        uses: actions/download-artifact@v4
        with:
          name: pyproject-toml

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --interpreter ${{ matrix.python }}
          sccache: 'true'
          manylinux: auto

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: artifact-wheel-${{ matrix.os.name }}-${{ matrix.target }}-${{ matrix.python }}
          path: dist

  build-sdist:
    runs-on: ubuntu-22.04
    needs: [set-version]
    steps:
      - uses: actions/checkout@v4

      - name: Download updated pyproject.toml
        uses: actions/download-artifact@v4
        with:
          name: pyproject-toml

      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist

      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: artifact-sdist
          path: dist

#  publish:
#    name: Publish
#    runs-on: ubuntu-22.04
#    needs: [build-wheel, build-sdist]
#    steps:
#      - uses: actions/download-artifact@v4
#        path: dist
#
#      - name: Publish to PyPI
#        uses: PyO3/maturin-action@v1
#        env:
#          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
#        with:
#          command: upload
#          args: --non-interactive --skip-existing artifact-*/*

#  check-docs:
#    runs-on: ubuntu-22.04
#    needs: publish
#    steps:
#      - name: Check out
#        uses: actions/checkout@v4
#
#      - name: Set up the environment
#        uses: ./.github/actions/setup-env
#
#      - name: Deploy documentation
#        run: pdm run mkdocs gh-deploy --force
